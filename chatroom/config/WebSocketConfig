package com.example.demo.config;

import com.example.demo.controller.WebSocketController;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Configuration;
import org.springframework.web.socket.CloseStatus;
import org.springframework.web.socket.TextMessage;
import org.springframework.web.socket.WebSocketSession;
import org.springframework.web.socket.config.annotation.EnableWebSocket;
import org.springframework.web.socket.config.annotation.WebSocketConfigurer;
import org.springframework.web.socket.config.annotation.WebSocketHandlerRegistry;
import org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor;


/**
 * @author 26568
 * @date 2023-07-12 10:43
 */
@Configuration
@EnableWebSocket
public class WebSocketConfig implements WebSocketConfigurer {
    @Autowired
    private WebSocketController webSocketController;
    @Override
    public void registerWebSocketHandlers(WebSocketHandlerRegistry registry) {
        // 通过这个方法，把刚才创建好的handler类 给注册到具体的路径上
        // 此时当浏览器，websocket的请求路径是 "/message"的时候，就会调用到WebsocketController 这个类型的方法
        registry.addHandler(webSocketController,"/message")
                // 通过注册这个特定的 Httpsession 拦截器，就可以把用户给 HttpSession 中添加的Arttribute 键值对
                // 往 WebSocketSession 里也添加一份
                .addInterceptors(new HttpSessionHandshakeInterceptor())
                ;
    }
}
