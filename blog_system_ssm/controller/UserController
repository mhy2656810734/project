package com.example.demo.controller;

import com.example.demo.common.AjaxResult;
import com.example.demo.common.ApplicationVariable;
import com.example.demo.common.PasswordTools;
import com.example.demo.common.UserSesionTools;
import com.example.demo.entity.UserInfo;
import com.example.demo.service.UserService;
import org.apache.catalina.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.util.StringUtils;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

/**
 * @author 26568
 * @date 2023-05-20 9:14
 */
@RestController
@RequestMapping("/user")
public class UserController {
    @Autowired
    private UserService userService;

    /**
     * 注册功能
     * @param userInfo
     * @return
     */
    @RequestMapping("/reg")
    public AjaxResult reg(UserInfo userInfo) {
        // 1.首先进行判空
        if(userInfo == null || !StringUtils.hasLength(userInfo.getUsername()) ||
                !StringUtils.hasLength(userInfo.getPassword())) {
            return AjaxResult.fail(-1,"参数有误");
        }
        // 2.调用UserService 执行添加方法，并将返回的结果添加到AjaxResult.data 进行返回
        // 将密码进行加盐
        userInfo.setPassword(PasswordTools.encrypt(userInfo.getPassword()));
        int result = userService.reg(userInfo);
        System.out.println("注册成功："+result);
        return AjaxResult.success(result);
    }

    /**
     * 登录功能
     * @param
     * @return
     */
    @RequestMapping("/login")
    public AjaxResult login(String username, String password, HttpServletRequest request) {
        // 首先进行判空
        if (!StringUtils.hasLength(username) ||
            !StringUtils.hasLength(password)) {
            return AjaxResult.fail(-1,"参数错误");
        }
        // 2.调用UserService 执行验证，并将返回的结果添加到AjaxResult.data 进行返回
        UserInfo userInfo = userService.login(username);
        if (userInfo == null || userInfo.getId() <= 0) {
            return AjaxResult.fail(-2,"用户名或者密码错误！");
        }
        // 进行加盐解密之后判断密码输入是否正确
        if (!PasswordTools.decrypt(password,userInfo.getPassword())) {
            return AjaxResult.fail(-1,"用户名或者密码错误！");
        }
        // 创建Session
        HttpSession session = request.getSession();
        // 将全局变量用户信息设置进去
        session.setAttribute(ApplicationVariable.SESSION_KEY_USERINFO,userInfo);
        return AjaxResult.success(1);
    }
    /**
     * 退出登录
     */
    @RequestMapping("/logout")
    public AjaxResult logout(HttpServletRequest request) {
        // 得到当前会话
        HttpSession session = request.getSession();
        // 删除当前用户信息
        session.removeAttribute(ApplicationVariable.SESSION_KEY_USERINFO);
        return AjaxResult.success(1);
    }
    /**
     * 判断用户是否已经登录
     */
    @RequestMapping("/islogin")
    public AjaxResult isLogin(HttpServletRequest request) {
        if (UserSesionTools.getLoginUser(request) == null) {
            // 未登录
            return AjaxResult.success(0);
        }
        return AjaxResult.success(1);
    }
}
